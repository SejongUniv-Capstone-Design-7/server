plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'capstone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Boot Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Boot Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// H2
	runtimeOnly 'com.h2database:h2'

	// MariaDB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// Spring Cloud AWS - S3 Bucket사용을 위함
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

tasks.named('test') {
	useJUnitPlatform()
}

// start.sh에서 /build/libs/*.jar 파일을 $JAR_FILE로 복사한다.
// Spring Boot 2.5 이상의 버전에서는 빌드시 일반 jar 1개와 -plain.jar 파일 1개가 함께 생성된다.
// 빌드시 plain jar 파일을 생성되지 않도록 아래의 내용 추가
jar {
	enabled = false
}